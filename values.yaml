# Default values for sonar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
namesonar: sonarqub
namept: postgres
image:
  repository: sonarqube
  tag: 8.8-community
  # Overrides the image tag whose default   tag: ""
ingress:
  enabled: true
  name: sonar-ingress
  hosts:
      host: "sonar.10.242.1.80.nip.io"
      paths:
      - path: /
        pathType: Prefix
        service:
          name: sonar
          port: 9000
image2:
  repository: postgres
  tag: 13

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
requests:
  cpu: 500m
  memory: 1024Mi
limits:
  cpu: 2000m
  memory: 2048Mi

service:
  type: NodePort
  port: 80
  targetPort: 31471
env:
 - name: "SONARQUBE_JDBC_USERNAME"
   value: "sonar"
 - name: "SONARQUBE_JDBC_URL"
   value: "jdbc:postgresql://postgres/sonar"
 - name: "SONARQUBE_JDBC_PASSWORD"
   value: "sonar"

volumes:
- name: sonar-data
  claimName: sonar-data2
- name: sonar-extensions
  claimName: sonar-extensions2

volumeMounts:
- mountPath: "/opt/sonarqube/data/"
  name: sonar-data
- mountPath: "/opt/sonarqube/extensions/"
  name: sonar-extensions
#start Postgres 

servicept:
  type: NodePort
  port: 5432
  targetPort: 31472

imagePullPolicy: "IfNotPresent"

ports:
  containerPort: 5432
configMapRef:
  name: postgres-config

volumeMounts2:
  mountPath: /var/lib/postgresql/data
  name: postgredb

volumes2:
  name: postgredb
  persistentVolumeClaim:
    claimName: postgres-pv-claim2

data:
  POSTGRES_DB: sonar
  POSTGRES_USER: sonar
  POSTGRES_PASSWORD: sonar

#Fin postgres

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
